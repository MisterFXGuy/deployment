#
# Log4perl configuration
#
log4perl.logger            = TRACE, Logfile
log4perl.category.runtrace = TRACE, RTLogfile
log4perl.additivity.runtrace = 0
log4perl.category.timetrace = TRACE, TimeLogfile
log4perl.additivity.timetrace = 0

log4perl.appender.Logfile          = Log::Log4perl::Appender::File
log4perl.appender.Logfile.umask    = sub { 0000 };
log4perl.appender.Logfile.filename = sub { logfilename(); };
log4perl.appender.RTLogfile.syswrite = 1
log4perl.appender.Logfile.mode     = append
log4perl.appender.Logfile.layout   = Log::Log4perl::Layout::PatternLayout
# log4perl.appender.Logfile.layout.ConversionPattern = %d [%p %P]: %F{1}-%L %m%n[%T]%n%n
log4perl.appender.Logfile.layout.ConversionPattern = %d [%p %P]: %F{1}-%L %m%n%n

log4perl.appender.RTLogfile          = Log::Log4perl::Appender::File
log4perl.appender.RTLogfile.umask    = sub { 0000 };
log4perl.appender.RTLogfile.filename = /opt/swamp/log/runtrace.log
log4perl.appender.RTLogfile.syswrite = 1
log4perl.appender.RTLogfile.mode     = append
log4perl.appender.RTLogfile.layout   = Log::Log4perl::Layout::PatternLayout
# log4perl.appender.RTLogfile.layout.ConversionPattern = %d{HH:mm:ss,SSS} [%P]: %F{1}-%L %m%n[%T]%n%n
log4perl.appender.RTLogfile.layout.ConversionPattern = %d{HH:mm:ss,SSS} [%P]: %F{1}-%L %m%n%n

log4perl.appender.TimeLogfile          = Log::Log4perl::Appender::File
log4perl.appender.TimeLogfile.umask    = sub { 0000 };
log4perl.appender.TimeLogfile.filename = /opt/swamp/log/timetrace.log
log4perl.appender.TimeLogfile.syswrite = 1
log4perl.appender.TimeLogfile.mode     = append
log4perl.appender.TimeLogfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.TimeLogfile.layout.ConversionPattern = %d{HH:mm:ss,SSS} [%P]: %F{1}-%L %m%n[%T]%n

# example use of timetrace appender
# my $event_start = time();
# ... execute event code
# my $event_end = time();
# my $event_elapsed = $event_end - $event_start;
# Log::Log4perl->get_logger('timetrace')->trace("<event_name> $execrunuid elapsed: $elapsed");
