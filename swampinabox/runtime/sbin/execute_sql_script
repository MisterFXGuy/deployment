#!/bin/bash

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2017 Software Assurance Marketplace

#
# Execute a SQL script as the database's 'root' user.
#

script_file="$1"
cnf_file="/opt/swamp/sql/sql.cnf"
cnf_file_needs_removal="no"
started_mysql_service="no"

function do_clean_up {
    stty echo
    if [ "$cnf_file_needs_removal" != "no" ]; then
        rm -f "$cnf_file"
    fi
    if [ "$started_mysql_service" != "no" ]; then
        /opt/swamp/sbin/swamp_manage_service mysql stop
    fi
}

function exit_normally {
    do_clean_up
    exit 0
}

function exit_with_error {
    do_clean_up
    echo "Error: $0: Error while attempting to execute: $script_file" 1>&2
    exit 1
}

#
# Ensure that temporary files get removed.
#
trap 'exit_with_error' INT TERM

############################################################################

if [ -z "$script_file" ]; then
    echo "Usage: $0 <SQL script file>" 1>&2
    exit 1
fi

if [ ! -r "$script_file" ]; then
    echo "Error: $0: No such file (or file is not readable): $script_file" 1>&2
    exit 1
fi

initial_mysql_service_status=$(/opt/swamp/sbin/swamp_manage_service mysql status)

if [ $? -ne 0 ]; then
    exit_with_error
fi

if [ "$initial_mysql_service_status" = "stopped" ]; then
    started_mysql_service="yes"
    /opt/swamp/sbin/swamp_manage_service mysql start || exit_with_error
fi

if [ -r /etc/.mysql_root -o -r /etc/.mysql ]; then
    # Allow for the possibility that we're running in a context
    # where the configuration file has already been created.

    if [ ! -e "$cnf_file" ]; then
        cnf_file_needs_removal="yes"
        /opt/swamp/sbin/create_mysql_root_cnf "$cnf_file" || exit_with_error
    fi

    mysql --defaults-file="$cnf_file" < "$script_file" || exit_with_error

    if [ "$cnf_file_needs_removal" != "no" ]; then
        rm -f "$cnf_file"
    fi
else
    echo "Enter the password for the database's 'root' user:"
    mysql -u root -p < "$script_file" || exit_with_error
fi

exit_normally
