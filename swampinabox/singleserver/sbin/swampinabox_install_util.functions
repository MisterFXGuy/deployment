# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2017 Software Assurance Marketplace

function exit_with_error {
    echo ""
    echo "Error encountered."
    exit 1
}

function continue_anyway {
    echo "Continuing with the install"
    return 0
}

function abort_install {
    echo ""
    echo "Aborting installation"

    remove_db_password_files

    echo ""
    echo "Installation is not complete."
    exit 1
}

function confirm_continue() {
    echo -n "Continue with the install? [N/y] "
    if [ "$ASSUME_RESPONSE" == "yes" ]; then
        echo "<assuming 'y'>"
        return 0
    fi
    read answer
    if [ "$answer" != "y" ]; then
        echo ""
        echo "Installation is not complete."
        return 1
    fi
    return 0
}

function yum_erase() {
    echo ""
    echo "Erasing: $*"
    yum -y erase $*
}

function yum_install() {
    echo ""
    echo "Installing: $*"
    yum -y install $*
}

function yum_confirm() {
    echo -n "Checking that packages were actually installed ... "

    actually_installed=$(yum list installed)
    not_actually_installed=""

    for pkg in $*; do
        grep ^$pkg\\. >/dev/null <<< "$actually_installed"
        if [ $? -eq 0 ]; then
            echo -n "$pkg "
        else
            not_actually_installed="$not_actually_installed $pkg"
        fi
    done

    if [ -z "$not_actually_installed" ]; then
        echo "(ok: found what we were looking for)"
    else
        echo "(problem: didn't find at least one package)"
        echo ""
        echo "Error: The following packages were not installed:$not_actually_installed"
        return 1
    fi

    return 0
}

function remove_db_password_files {
    for file in \
            /opt/swamp/sql/sql.cnf \
            /etc/.mysql_root \
            /etc/.mysql_web \
            /etc/.mysql_java \
            /etc/.mysql_admin; do
        if [ -e "$file" ]; then
            echo "Removing $file"
            rm -f "$file"
        fi
    done
}
